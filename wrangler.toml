name = "copibot-webhook"
main = "worker.js"
compatibility_date = "2024-09-01"

# Si usas cron desde el UI, puedes dejar esto; si quieres que quede versionado, descomenta:
[triggers]
crons = ["*/15 * * * *"]

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (for wrangler)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 1) Construimos /tmp/secrets.json con todos los keys
      - name: Build secrets.json
        run: |
          jq -n \
            --arg VERIFY_TOKEN          "${{ secrets.VERIFY_TOKEN }}" \
            --arg WA_TOKEN              "${{ secrets.WA_TOKEN }}" \
            --arg PHONE_ID              "${{ secrets.PHONE_ID }}" \
            --arg SUPABASE_URL          "${{ secrets.SUPABASE_URL }}" \
            --arg SUPABASE_SERVICE_ROLE "${{ secrets.SUPABASE_SERVICE_ROLE }}" \
            --arg OPENAI_API_KEY        "${{ secrets.OPENAI_API_KEY }}" \
            --arg LLM_MODEL             "${{ secrets.LLM_MODEL }}" \
            --arg OPENAI_NLU_MODEL      "${{ secrets.OPENAI_NLU_MODEL }}" \
            --arg OPENAI_FALLBACK_MODEL "${{ secrets.OPENAI_FALLBACK_MODEL }}" \
            --arg GCAL_CLIENT_ID        "${{ secrets.GCAL_CLIENT_ID }}" \
            --arg GCAL_CLIENT_SECRET    "${{ secrets.GCAL_CLIENT_SECRET }}" \
            --arg GCAL_REFRESH_TOKEN    "${{ secrets.GCAL_REFRESH_TOKEN }}" \
            --arg SUPPORT_PHONE_E164    "${{ secrets.SUPPORT_PHONE_E164 }}" \
            --arg SUPPORT_WHATSAPP      "${{ secrets.SUPPORT_WHATSAPP }}" \
            --arg TZ                    "${{ secrets.TZ }}" \
            --arg STRICT_FAMILY_MATCH   "${{ secrets.STRICT_FAMILY_MATCH }}" \
            --arg CRON_SECRET           "${{ secrets.CRON_SECRET }}" \
            '{
              VERIFY_TOKEN:          $VERIFY_TOKEN,
              WA_TOKEN:              $WA_TOKEN,
              PHONE_ID:              $PHONE_ID,
              SUPABASE_URL:          $SUPABASE_URL,
              SUPABASE_SERVICE_ROLE: $SUPABASE_SERVICE_ROLE,
              OPENAI_API_KEY:        $OPENAI_API_KEY,
              LLM_MODEL:             $LLM_MODEL,
              OPENAI_NLU_MODEL:      $OPENAI_NLU_MODEL,
              OPENAI_FALLBACK_MODEL: $OPENAI_FALLBACK_MODEL,
              GCAL_CLIENT_ID:        $GCAL_CLIENT_ID,
              GCAL_CLIENT_SECRET:    $GCAL_CLIENT_SECRET,
              GCAL_REFRESH_TOKEN:    $GCAL_REFRESH_TOKEN,
              SUPPORT_PHONE_E164:    $SUPPORT_PHONE_E164,
              SUPPORT_WHATSAPP:      $SUPPORT_WHATSAPP,
              TZ:                    $TZ,
              STRICT_FAMILY_MATCH:   $STRICT_FAMILY_MATCH,
              CRON_SECRET:           $CRON_SECRET
            }' > /tmp/secrets.json

          echo "Generated /tmp/secrets.json"
          jq 'keys' /tmp/secrets.json

      # 2) Subimos secretos en un paso aparte (apunta al archivo)
      - name: Upload Cloudflare secrets (bulk)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: secret bulk /tmp/secrets.json
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      # 3) Publicamos el worker
      - name: Publish to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: deploy

